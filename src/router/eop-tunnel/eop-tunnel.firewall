#!/bin/sh
nv=/usr/sbin/nvram
ipt=/usr/sbin/iptables
tunnels=`$nv get oet_tunnels`

#WAN_IF="$(ip route | awk '/^default/{print $NF}')"
WAN_IF=$(get_wanface)
FW_STATE="-m state --state NEW"

for i in `seq 1 $tunnels`
do
	if test -e "/tmp/oet/pid/${i}.pid"
	then 
		FW_CHAIN="blocked-oet${i}"
		WGDELRT="/tmp/wgdelrt_oet${i}"
		
		$ipt -D FORWARD -i oet${i} -j ACCEPT 2>&1 > /dev/null
		$ipt -D FORWARD -o oet${i} -j ACCEPT 2>&1 > /dev/null
		$ipt -D INPUT -i oet${i} -j ACCEPT 2>&1 > /dev/null
		$ipt -D INPUT -p 47 -s `$nv get oet${i}_rem` -j ACCEPT 2>&1 > /dev/null
		$ipt -D INPUT -p 97 -s `$nv get oet${i}_rem` -j ACCEPT 2>&1 > /dev/null
		$ipt -D INPUT -p udp --dport `$nv get oet${i}_port` -j ACCEPT 2>&1 > /dev/null
		$ipt -t raw -D PREROUTING ! -i oet${i} -d $(getipmask oet${i}) -m addrtype ! --src-type LOCAL -j DROP
		$ipt -t nat -D POSTROUTING -o oet${i} -j MASQUERADE 2>&1 > /dev/null
		$ipt -D FORWARD -o $WAN_IF $FW_STATE -j $FW_CHAIN >/dev/null 2>&1
		$ipt -F $FW_CHAIN >/dev/null 2>&1
		$ipt -X $FW_CHAIN >/dev/null 2>&1
		if [[ -f "$WGDELRT" ]]; then
			(while read route; do $route; done < $WGDELRT) >/dev/null 2>&1
			rm $WGDELRT
		fi
		# remove because FW sets it by default
		$ipt -D FORWARD -i oet${i} $FW_STATE -j ACCEPT > /dev/null 2>&1
	fi
done
for i in `seq 1 $tunnels`
do
	if [ `$nv get oet${i}_en` -eq 1 ]
	then
		if [ `$nv get oet${i}_proto` -eq 1 ]
		then
			$ipt -I INPUT -p 47 -s `$nv get oet${i}_rem` -j ACCEPT 2>&1 > /dev/null
		fi
		if [ `$nv get oet${i}_proto` -eq 0 ]
		then
			$ipt -I INPUT -p 97 -s `$nv get oet${i}_rem` -j ACCEPT 2>&1 > /dev/null
		fi
		if [[ `$nv get oet${i}_bridged` -ne 1 && `$nv get oet${i}_proto` -ne 2 ]]
		then
			$ipt -I FORWARD -i oet${i} -j ACCEPT 2>&1 > /dev/null
			#$ipt -I FORWARD -o oet${i} -j ACCEPT 2>&1 > /dev/null
			$ipt -I INPUT -i oet${i} -j ACCEPT 2>&1 > /dev/null
		fi
		if [ `$nv get oet${i}_proto` -eq 2 ]
		then
			insmod xt_addrtype
			$ipt -I INPUT -p udp --dport `$nv get oet${i}_port` -j ACCEPT 2>&1 > /dev/null
			if [ `$nv get oet${i}_mit` -eq 1 ]
			then
				$ipt -t raw -I PREROUTING ! -i oet${i} -d $(getipmask oet${i}) -m addrtype ! --src-type LOCAL -j DROP
			fi
			#egc: add NAT out for DDWRT client
			# Controlled by nvram parameter oet${i}_natout
			if [[ $($nv get oet${i}_natout) -eq 1 ]]
			then
				# $ipt -t nat -I POSTROUTING -o oet${i} -j SNAT --to-source $($nv get oet${i}_ipaddr) 2>&1 > /dev/null
				$ipt -t nat -I POSTROUTING -o oet${i} -j MASQUERADE 2>&1 > /dev/null
			fi
			#egc: killswitch controled by nvram parameter oet${i}_killswitch
			if [[ $($nv get oet${i}_killswitch) -eq 1 ]]
			then
				if [[ ! -z "$($nv get oet${i}_pbr | sed '/^[[:blank:]]*#/d')" ]]; then
					#PBR killswitch
					logger -p user.info "WireGuard Killswitch on PBR activated for oet${i}"
					# create firewall chain for blocked IPs
					$ipt -N $FW_CHAIN

					echo $($nv get oet${i}_pbr), | while read -d ',' line; do  	# added "," so that last entry is read
						line=$(echo $line | sed -e 's/^[[:space:]]*//')
						if [ ${line:0:1} = "#" ]; then
							continue
						fi
						#check if ip address is used then block
						case $line in
						 [0-9]*)
							$ipt -A $FW_CHAIN -s $line -j REJECT 2>&1 > /dev/null
							;;
						 *)
							# do nothing
							;;
						esac
					done

					# begin blocking: force LAN->WAN traffic through firewall chain for inspection
					$ipt -I FORWARD -o $WAN_IF $FW_STATE -j $FW_CHAIN
				else
					#general killswitch
					logger -p user.info "WireGuard Killswitch on br0 activated for all clients!"
					echo "$ipt -D FORWARD -i br0 -o $WAN_IF $FW_STATE -j REJECT" >> $WGDELRT
					$ipt -I FORWARD -i br0 -o $WAN_IF $FW_STATE -j REJECT
				fi
			fi
			#end kill switch
			
			#New Inbound opening of firewall for site-to-site, remove line 48- 53
			if [[ $($nv get oet${i}_firewallin) -eq 0 ]]
			then
				echo "$ipt -D FORWARD -i oet${i} $FW_STATE -j ACCEPT" >> $WGDELRT
				echo "$ipt -D INPUT -i oet${i} $FW_STATE -j ACCEPT" >> $WGDELRT
				$ipt -I FORWARD -i oet${i} $FW_STATE -j ACCEPT > /dev/null 2>&1
				$ipt -I INPUT -i oet${i} $FW_STATE -j ACCEPT > /dev/null 2>&1
				logger -p user.info "WireGuard Inbound Firewall deactivated on oet${i}"
			fi
			#end inbound firewall
		fi
	fi
done
